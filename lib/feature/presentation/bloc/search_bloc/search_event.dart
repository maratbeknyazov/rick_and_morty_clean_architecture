import 'package:equatable/equatable.dart';
// Импорт пакета equatable — он нужен, чтобы удобно сравнивать объекты (особенно в BLoC).
// Без него два объекта с одинаковыми значениями считались бы разными.

/// Абстрактный класс событий для поиска персонажей.
/// События используются, чтобы передавать действия пользователя в BLoC.
/// Наследуется от Equatable, чтобы можно было сравнивать события по значениям.
abstract class PersonSearchEvent extends Equatable {
  const PersonSearchEvent();
  // Конструктор. Пока ничего не принимает — просто базовый.

  @override
  List<Object> get props => [];
  // Equatable требует переопределить props — список полей, которые участвуют в сравнении.
  // Здесь список пустой, потому что в базовом классе полей нет.
}

/// Событие для поиска персонажей по строке.
/// Этот класс будет использоваться, когда пользователь вводит запрос в поиске.
class SearchPersons extends PersonSearchEvent {
  final String personQuery;
  // Поле — строка запроса, которую ввёл пользователь (например, имя персонажа).

  const SearchPersons(this.personQuery);
  // Конструктор, принимающий текст запроса.

  @override
  List<Object> get props => [personQuery];
  // Теперь Equatable будет сравнивать SearchPersons по значению поля personQuery.
}



// Это часть архитектуры BLoC — где события (Event) запускают действия в логике приложения.
// PersonSearchEvent — это базовый класс. От него наследуются конкретные действия, например SearchPersons.
// SearchPersons содержит запрос пользователя, который он ввёл в поиск.
// Equatable позволяет Dart понимать: два события с одинаковыми значениями — это одно и то же событие.