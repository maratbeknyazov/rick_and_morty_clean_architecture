// Импортируем пакет equatable — он помогает сравнивать объекты не по ссылке, а по значениям.
// Это удобно, например, когда мы хотим сравнить две ошибки и понять, одинаковые ли они.
import 'package:equatable/equatable.dart';

// Абстрактный класс Failure (ошибка).
// Он будет использоваться как "общий тип" для всех возможных ошибок в приложении.
// Ключевое слово `abstract` значит, что этот класс нельзя использовать напрямую,
// только от него можно наследоваться (как шаблон).
abstract class Failure extends Equatable {
  // Переопределяем props, чтобы можно было сравнивать ошибки.
  // Здесь props пустой, значит, у ошибки пока нет дополнительных данных.
  @override
  List<Object?> get props => [];
}

// Класс ServerFailure — это конкретная ошибка, которая говорит о проблеме на сервере (например, нет интернета,
// сервер не отвечает, произошёл сбой при загрузке и т.д.).
// Он наследуется от Failure, значит, это одна из разновидностей ошибок.
class ServerFailure extends Failure {}

// Класс CacheFailure — другая конкретная ошибка, связанная с кэшем.
// Например, если данные не удалось сохранить или загрузить из локального хранилища.
class CacheFailure extends Failure {}
